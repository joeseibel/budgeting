/*
 * generated by Xtext
 */
package budgeting.formatting2;

import budgeting.budgeting.ActualAmountEntry
import budgeting.budgeting.ActualTransactionEntry
import budgeting.budgeting.BudgetEntry
import budgeting.budgeting.BudgetingPackage
import budgeting.budgeting.ExpenseCategory
import budgeting.budgeting.IncomeCategory
import budgeting.budgeting.Library
import budgeting.budgeting.Month
import budgeting.budgeting.Transaction
import budgeting.budgeting.Year
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.eclipse.xtext.xbase.formatting2.IndentOnceAutowrapFormatter

import static extension org.eclipse.xtext.EcoreUtil2.getContainerOfType

class BudgetingFormatter extends AbstractFormatter2 {
	def dispatch void format(Library library, extension IFormattableDocument document) {
		library.surround[noSpace]
		library.regionForFeature(BudgetingPackage.eINSTANCE.library_Name).surround[oneSpace]
		library.regionForKeyword("{").append[setNewLines(1, 1, Integer.MAX_VALUE); increaseIndentation]
		library.categories.forEach[format(document)]
		library.regionForKeyword("}").prepend[decreaseIndentation]
	}
	
	def dispatch void format(IncomeCategory incomeCategory, extension IFormattableDocument document) {
		incomeCategory.regionForKeyword("income").append[oneSpace]
		incomeCategory.append[setNewLines(1, 1, Integer.MAX_VALUE)]
	}
	
	def dispatch void format(ExpenseCategory expenseCategory, extension IFormattableDocument document) {
		expenseCategory.regionForKeyword("expense").append[oneSpace]
		expenseCategory.append[setNewLines(1, 1, Integer.MAX_VALUE)]
		expenseCategory.regionForKeyword("[").prepend[oneSpace].append[noSpace]
		expenseCategory.formatConditionally([
			val extension doc = requireFitsInLine
			expenseCategory.regionsForKeywords(",").forEach[prepend[noSpace].append[oneSpace]]
			expenseCategory.regionForKeyword("]").prepend[noSpace]
		], [extension doc |
			val indentFormatter = new IndentOnceAutowrapFormatter(expenseCategory.regionForKeyword("]").previousHiddenRegion)
			expenseCategory.regionsForKeywords(",").forEach[prepend[noSpace].append[oneSpace; autowrap; onAutowrap = indentFormatter]]
			expenseCategory.regionForKeyword("]").prepend[newLine]
		])
	}

	def dispatch void format(Year year, extension IFormattableDocument document) {
		year.surround[noSpace]
		year.regionForKeyword("uses").surround[oneSpace]
		year.regionForKeyword("{").prepend[oneSpace].append[setNewLines(1, 1, Integer.MAX_VALUE); increaseIndentation]
		year.months.forEach[format(document)]
		year.regionForKeyword("}").prepend[decreaseIndentation]
	}

	def dispatch void format(Month month, extension IFormattableDocument document) {
		month.regionsForKeywords("budget", "actual").forEach[surround[oneSpace]]
		month.regionsForKeywords("{").forEach[append[setNewLines(1, 1, Integer.MAX_VALUE); increaseIndentation]]
		month.regionsForKeywords("}").forEach[prepend[decreaseIndentation]]
		(month.budgetEntries + month.actualEntries).forEach[format(document)]
		month.append[if (month == month.getContainerOfType(Year).months.last) {
			setNewLines(1, 1, Integer.MAX_VALUE)
		} else {
			setNewLines(2, 2, Integer.MAX_VALUE)
		}]
	}
	
	def dispatch void format(BudgetEntry budgetEntry, extension IFormattableDocument document) {
		budgetEntry.regionForKeyword(":").prepend[noSpace].append[oneSpace]
		budgetEntry.regionForKeyword("*").surround[oneSpace]
		budgetEntry.append[setNewLines(1, 1, Integer.MAX_VALUE)]
	}
	
	def dispatch void format(ActualAmountEntry actualAmountEntry, extension IFormattableDocument document) {
		actualAmountEntry.regionForKeyword(":").prepend[noSpace].append[oneSpace]
		actualAmountEntry.append[setNewLines(1, 1, Integer.MAX_VALUE)]
	}

	def dispatch void format(ActualTransactionEntry actualTransactionEntry, extension IFormattableDocument document) {
		actualTransactionEntry.regionForKeyword("{").prepend[oneSpace].append[newLine; increaseIndentation]
		actualTransactionEntry.transactions.forEach[format(document)]
		actualTransactionEntry.regionForKeyword("}").prepend[decreaseIndentation].append[setNewLines(1, 1, Integer.MAX_VALUE)]
	}
	
	def dispatch void format(Transaction transaction, extension IFormattableDocument document) {
		transaction.regionsForKeywords("cash", "card").forEach[append[oneSpace]]
		transaction.regionsForKeywords("on", "from").forEach[surround[oneSpace]]
		transaction.append[setNewLines(1, 1, Integer.MAX_VALUE)]
	}
}