/*
 * generated by Xtext
 */
package budgeting.formatting2;

import budgeting.budgeting.ActualAmountEntry
import budgeting.budgeting.ActualTransactionEntry
import budgeting.budgeting.BudgetEntry
import budgeting.budgeting.BudgetingPackage
import budgeting.budgeting.ExpenseCategory
import budgeting.budgeting.IncomeCategory
import budgeting.budgeting.Library
import budgeting.budgeting.Month
import budgeting.budgeting.Transaction
import budgeting.budgeting.Year
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

import static extension org.eclipse.xtext.EcoreUtil2.getContainerOfType

class BudgetingFormatter extends AbstractFormatter2 {
	def dispatch void format(Library library, extension IFormattableDocument document) {
		library.surround[noSpace]
		library.regionFor.feature(BudgetingPackage.eINSTANCE.library_Name).surround[oneSpace]
		library.regionFor.keyword("{").append[setNewLines(1, 1, Integer.MAX_VALUE)]
		library.categories.forEach[it.format(document)]
	}
	
	def dispatch void format(IncomeCategory incomeCategory, extension IFormattableDocument document) {
		incomeCategory.surround[indent]
		incomeCategory.regionFor.keyword("income").append[oneSpace]
		incomeCategory.append[setNewLines(1, 1, Integer.MAX_VALUE)]
	}
	
	def dispatch void format(ExpenseCategory expenseCategory, extension IFormattableDocument document) {
		expenseCategory.surround[indent]
		expenseCategory.regionFor.keyword("expense").append[oneSpace]
		expenseCategory.append[setNewLines(1, 1, Integer.MAX_VALUE)]
		if (expenseCategory.patterns.size == 1) {
			expenseCategory.regionFor.keyword("[").prepend[oneSpace].append[noSpace]
			expenseCategory.regionFor.keyword("]").prepend[noSpace]
		} else if (expenseCategory.patterns.size > 1) {
			expenseCategory.regionFor.keyword("[").prepend[oneSpace].append[setNewLines(1, 1, Integer.MAX_VALUE)]
			expenseCategory.regionFor.features(BudgetingPackage.eINSTANCE.expenseCategory_Patterns).forEach[surround[indent]]
			expenseCategory.regionFor.keywords(",").forEach[prepend[noSpace].append[setNewLines(1, 1, Integer.MAX_VALUE)]]
			expenseCategory.regionFor.keyword("]").prepend[setNewLines(1, 1, Integer.MAX_VALUE)]
		}
	}

	def dispatch void format(Year year, extension IFormattableDocument document) {
		year.surround[noSpace]
		year.regionFor.keyword("uses").surround[oneSpace]
		year.regionFor.keyword("{").prepend[oneSpace].append[setNewLines(1, 1, Integer.MAX_VALUE)]
		year.months.forEach[it.format(document)]
	}

	def dispatch void format(Month month, extension IFormattableDocument document) {
		month.surround[indent]
		month.regionFor.keywords("budget", "actual").forEach[surround[oneSpace]]
		month.regionFor.keywords("{").forEach[append[setNewLines(1, 1, Integer.MAX_VALUE)]]
		(month.budgetEntries + month.actualEntries).forEach[it.format(document)]
		month.append[if (month == month.getContainerOfType(Year).months.last) {
			setNewLines(1, 1, Integer.MAX_VALUE)
		} else {
			setNewLines(2, 2, Integer.MAX_VALUE)
		}]
	}
	
	def dispatch void format(BudgetEntry budgetEntry, extension IFormattableDocument document) {
		budgetEntry.surround[indent]
		budgetEntry.regionFor.keyword(":").prepend[noSpace].append[oneSpace]
		budgetEntry.regionFor.keyword("*").surround[oneSpace]
		budgetEntry.append[setNewLines(1, 1, Integer.MAX_VALUE)]
	}
	
	def dispatch void format(ActualAmountEntry actualAmountEntry, extension IFormattableDocument document) {
		actualAmountEntry.surround[indent]
		actualAmountEntry.regionFor.keyword(":").prepend[noSpace].append[oneSpace]
		actualAmountEntry.append[setNewLines(1, 1, Integer.MAX_VALUE)]
	}

	def dispatch void format(ActualTransactionEntry actualTransactionEntry, extension IFormattableDocument document) {
		actualTransactionEntry.surround[indent]
		actualTransactionEntry.regionFor.keyword("{").prepend[oneSpace].append[newLine]
		actualTransactionEntry.transactions.forEach[it.format(document)]
		actualTransactionEntry.append[setNewLines(1, 1, Integer.MAX_VALUE)]
	}
	
	def dispatch void format(Transaction transaction, extension IFormattableDocument document) {
		transaction.surround[indent]
		transaction.regionFor.keywords("cash", "card").forEach[append[oneSpace]]
		transaction.regionFor.keywords("on", "from").forEach[surround[oneSpace]]
		transaction.append[setNewLines(1, 1, Integer.MAX_VALUE)]
	}
}