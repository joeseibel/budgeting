/*
 * generated by Xtext
 */
grammar InternalBudgeting;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package budgeting.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package budgeting.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import budgeting.services.BudgetingGrammarAccess;

}

@parser::members {
 
 	private BudgetingGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(BudgetingGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleBudgetingFile
entryRuleBudgetingFile 
:
{ before(grammarAccess.getBudgetingFileRule()); }
	 ruleBudgetingFile
{ after(grammarAccess.getBudgetingFileRule()); } 
	 EOF 
;

// Rule BudgetingFile
ruleBudgetingFile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBudgetingFileAccess().getAlternatives()); }
(rule__BudgetingFile__Alternatives)
{ after(grammarAccess.getBudgetingFileAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLibrary
entryRuleLibrary 
:
{ before(grammarAccess.getLibraryRule()); }
	 ruleLibrary
{ after(grammarAccess.getLibraryRule()); } 
	 EOF 
;

// Rule Library
ruleLibrary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLibraryAccess().getGroup()); }
(rule__Library__Group__0)
{ after(grammarAccess.getLibraryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCategory
entryRuleCategory 
:
{ before(grammarAccess.getCategoryRule()); }
	 ruleCategory
{ after(grammarAccess.getCategoryRule()); } 
	 EOF 
;

// Rule Category
ruleCategory
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCategoryAccess().getAlternatives()); }
(rule__Category__Alternatives)
{ after(grammarAccess.getCategoryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleYear
entryRuleYear 
:
{ before(grammarAccess.getYearRule()); }
	 ruleYear
{ after(grammarAccess.getYearRule()); } 
	 EOF 
;

// Rule Year
ruleYear
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getYearAccess().getGroup()); }
(rule__Year__Group__0)
{ after(grammarAccess.getYearAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMonth
entryRuleMonth 
:
{ before(grammarAccess.getMonthRule()); }
	 ruleMonth
{ after(grammarAccess.getMonthRule()); } 
	 EOF 
;

// Rule Month
ruleMonth
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMonthAccess().getGroup()); }
(rule__Month__Group__0)
{ after(grammarAccess.getMonthAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBudgetEntry
entryRuleBudgetEntry 
:
{ before(grammarAccess.getBudgetEntryRule()); }
	 ruleBudgetEntry
{ after(grammarAccess.getBudgetEntryRule()); } 
	 EOF 
;

// Rule BudgetEntry
ruleBudgetEntry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBudgetEntryAccess().getAlternatives()); }
(rule__BudgetEntry__Alternatives)
{ after(grammarAccess.getBudgetEntryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActualEntry
entryRuleActualEntry 
:
{ before(grammarAccess.getActualEntryRule()); }
	 ruleActualEntry
{ after(grammarAccess.getActualEntryRule()); } 
	 EOF 
;

// Rule ActualEntry
ruleActualEntry
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActualEntryAccess().getAlternatives()); }
(rule__ActualEntry__Alternatives)
{ after(grammarAccess.getActualEntryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransaction
entryRuleTransaction 
:
{ before(grammarAccess.getTransactionRule()); }
	 ruleTransaction
{ after(grammarAccess.getTransactionRule()); } 
	 EOF 
;

// Rule Transaction
ruleTransaction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransactionAccess().getAlternatives()); }
(rule__Transaction__Alternatives)
{ after(grammarAccess.getTransactionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDollar
entryRuleDollar 
:
{ before(grammarAccess.getDollarRule()); }
	 ruleDollar
{ after(grammarAccess.getDollarRule()); } 
	 EOF 
;

// Rule Dollar
ruleDollar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDollarAccess().getDECIMALTerminalRuleCall()); }
	RULE_DECIMAL
{ after(grammarAccess.getDollarAccess().getDECIMALTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDouble
entryRuleDouble 
:
{ before(grammarAccess.getDoubleRule()); }
	 ruleDouble
{ after(grammarAccess.getDoubleRule()); } 
	 EOF 
;

// Rule Double
ruleDouble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleAccess().getAlternatives()); }
(rule__Double__Alternatives)
{ after(grammarAccess.getDoubleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalInt
entryRuleOptionalInt 
:
{ before(grammarAccess.getOptionalIntRule()); }
	 ruleOptionalInt
{ after(grammarAccess.getOptionalIntRule()); } 
	 EOF 
;

// Rule OptionalInt
ruleOptionalInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalIntAccess().getINTTerminalRuleCall()); }
	RULE_INT
{ after(grammarAccess.getOptionalIntAccess().getINTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule MonthEnum
ruleMonthEnum
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthEnumAccess().getAlternatives()); }
(rule__MonthEnum__Alternatives)
{ after(grammarAccess.getMonthEnumAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__BudgetingFile__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetingFileAccess().getLibraryParserRuleCall_0()); }
	ruleLibrary
{ after(grammarAccess.getBudgetingFileAccess().getLibraryParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBudgetingFileAccess().getYearParserRuleCall_1()); }
	ruleYear
{ after(grammarAccess.getBudgetingFileAccess().getYearParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getGroup_0()); }
(rule__Category__Group_0__0)
{ after(grammarAccess.getCategoryAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCategoryAccess().getGroup_1()); }
(rule__Category__Group_1__0)
{ after(grammarAccess.getCategoryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getGroup_0()); }
(rule__BudgetEntry__Group_0__0)
{ after(grammarAccess.getBudgetEntryAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getBudgetEntryAccess().getGroup_1()); }
(rule__BudgetEntry__Group_1__0)
{ after(grammarAccess.getBudgetEntryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getGroup_0()); }
(rule__ActualEntry__Group_0__0)
{ after(grammarAccess.getActualEntryAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getActualEntryAccess().getGroup_1()); }
(rule__ActualEntry__Group_1__0)
{ after(grammarAccess.getActualEntryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getGroup_0()); }
(rule__Transaction__Group_0__0)
{ after(grammarAccess.getTransactionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTransactionAccess().getGroup_1()); }
(rule__Transaction__Group_1__0)
{ after(grammarAccess.getTransactionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDoubleAccess().getDECIMALTerminalRuleCall_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getDoubleAccess().getDECIMALTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MonthEnum__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthEnumAccess().getJANUARYEnumLiteralDeclaration_0()); }
(	'january' 
)
{ after(grammarAccess.getMonthEnumAccess().getJANUARYEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMonthEnumAccess().getFEBRUARYEnumLiteralDeclaration_1()); }
(	'february' 
)
{ after(grammarAccess.getMonthEnumAccess().getFEBRUARYEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMonthEnumAccess().getMARCHEnumLiteralDeclaration_2()); }
(	'march' 
)
{ after(grammarAccess.getMonthEnumAccess().getMARCHEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getMonthEnumAccess().getAPRILEnumLiteralDeclaration_3()); }
(	'april' 
)
{ after(grammarAccess.getMonthEnumAccess().getAPRILEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getMonthEnumAccess().getMAYEnumLiteralDeclaration_4()); }
(	'may' 
)
{ after(grammarAccess.getMonthEnumAccess().getMAYEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getMonthEnumAccess().getJUNEEnumLiteralDeclaration_5()); }
(	'june' 
)
{ after(grammarAccess.getMonthEnumAccess().getJUNEEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getMonthEnumAccess().getJULYEnumLiteralDeclaration_6()); }
(	'july' 
)
{ after(grammarAccess.getMonthEnumAccess().getJULYEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getMonthEnumAccess().getAUGUSTEnumLiteralDeclaration_7()); }
(	'august' 
)
{ after(grammarAccess.getMonthEnumAccess().getAUGUSTEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getMonthEnumAccess().getSEPTEMBEREnumLiteralDeclaration_8()); }
(	'september' 
)
{ after(grammarAccess.getMonthEnumAccess().getSEPTEMBEREnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getMonthEnumAccess().getOCTOBEREnumLiteralDeclaration_9()); }
(	'october' 
)
{ after(grammarAccess.getMonthEnumAccess().getOCTOBEREnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getMonthEnumAccess().getNOVEMBEREnumLiteralDeclaration_10()); }
(	'november' 
)
{ after(grammarAccess.getMonthEnumAccess().getNOVEMBEREnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getMonthEnumAccess().getDECEMBEREnumLiteralDeclaration_11()); }
(	'december' 
)
{ after(grammarAccess.getMonthEnumAccess().getDECEMBEREnumLiteralDeclaration_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Library__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__0__Impl
	rule__Library__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getLibraryKeyword_0()); }

	'library' 

{ after(grammarAccess.getLibraryAccess().getLibraryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__1__Impl
	rule__Library__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getNameAssignment_1()); }
(rule__Library__NameAssignment_1)
{ after(grammarAccess.getLibraryAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__2__Impl
	rule__Library__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getLibraryAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__3__Impl
	rule__Library__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getCategoriesAssignment_3()); }
(rule__Library__CategoriesAssignment_3)*
{ after(grammarAccess.getLibraryAccess().getCategoriesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Library__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getLibraryAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Category__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_0__0__Impl
	rule__Category__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getIncomeCategoryAction_0_0()); }
(

)
{ after(grammarAccess.getCategoryAccess().getIncomeCategoryAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_0__1__Impl
	rule__Category__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getIncomeKeyword_0_1()); }

	'income' 

{ after(grammarAccess.getCategoryAccess().getIncomeKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getNameAssignment_0_2()); }
(rule__Category__NameAssignment_0_2)
{ after(grammarAccess.getCategoryAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Category__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_1__0__Impl
	rule__Category__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getExpenseCategoryAction_1_0()); }
(

)
{ after(grammarAccess.getCategoryAccess().getExpenseCategoryAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_1__1__Impl
	rule__Category__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getExpenseKeyword_1_1()); }

	'expense' 

{ after(grammarAccess.getCategoryAccess().getExpenseKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_1__2__Impl
	rule__Category__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getNameAssignment_1_2()); }
(rule__Category__NameAssignment_1_2)
{ after(grammarAccess.getCategoryAccess().getNameAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getGroup_1_3()); }
(rule__Category__Group_1_3__0)?
{ after(grammarAccess.getCategoryAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Category__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_1_3__0__Impl
	rule__Category__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getLeftSquareBracketKeyword_1_3_0()); }

	'[' 

{ after(grammarAccess.getCategoryAccess().getLeftSquareBracketKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_1_3__1__Impl
	rule__Category__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getPatternsAssignment_1_3_1()); }
(rule__Category__PatternsAssignment_1_3_1)
{ after(grammarAccess.getCategoryAccess().getPatternsAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_1_3__2__Impl
	rule__Category__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getGroup_1_3_2()); }
(rule__Category__Group_1_3_2__0)*
{ after(grammarAccess.getCategoryAccess().getGroup_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group_1_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_1_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_1_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getRightSquareBracketKeyword_1_3_3()); }

	']' 

{ after(grammarAccess.getCategoryAccess().getRightSquareBracketKeyword_1_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Category__Group_1_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_1_3_2__0__Impl
	rule__Category__Group_1_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_1_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getCommaKeyword_1_3_2_0()); }

	',' 

{ after(grammarAccess.getCategoryAccess().getCommaKeyword_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Category__Group_1_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Category__Group_1_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Category__Group_1_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getPatternsAssignment_1_3_2_1()); }
(rule__Category__PatternsAssignment_1_3_2_1)
{ after(grammarAccess.getCategoryAccess().getPatternsAssignment_1_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Year__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Year__Group__0__Impl
	rule__Year__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Year__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYearAccess().getNameAssignment_0()); }
(rule__Year__NameAssignment_0)
{ after(grammarAccess.getYearAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Year__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Year__Group__1__Impl
	rule__Year__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Year__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYearAccess().getUsesKeyword_1()); }

	'uses' 

{ after(grammarAccess.getYearAccess().getUsesKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Year__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Year__Group__2__Impl
	rule__Year__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Year__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYearAccess().getLibraryAssignment_2()); }
(rule__Year__LibraryAssignment_2)
{ after(grammarAccess.getYearAccess().getLibraryAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Year__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Year__Group__3__Impl
	rule__Year__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Year__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYearAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getYearAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Year__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Year__Group__4__Impl
	rule__Year__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Year__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYearAccess().getMonthsAssignment_4()); }
(rule__Year__MonthsAssignment_4)*
{ after(grammarAccess.getYearAccess().getMonthsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Year__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Year__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Year__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYearAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getYearAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Month__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Month__Group__0__Impl
	rule__Month__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Month__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getNameAssignment_0()); }
(rule__Month__NameAssignment_0)
{ after(grammarAccess.getMonthAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Month__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Month__Group__1__Impl
	rule__Month__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Month__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getBudgetKeyword_1()); }

	'budget' 

{ after(grammarAccess.getMonthAccess().getBudgetKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Month__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Month__Group__2__Impl
	rule__Month__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Month__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getMonthAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Month__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Month__Group__3__Impl
	rule__Month__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Month__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getBudgetEntriesAssignment_3()); }
(rule__Month__BudgetEntriesAssignment_3)*
{ after(grammarAccess.getMonthAccess().getBudgetEntriesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Month__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Month__Group__4__Impl
	rule__Month__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Month__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getMonthAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Month__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Month__Group__5__Impl
	rule__Month__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Month__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getActualKeyword_5()); }

	'actual' 

{ after(grammarAccess.getMonthAccess().getActualKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Month__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Month__Group__6__Impl
	rule__Month__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Month__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getMonthAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Month__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Month__Group__7__Impl
	rule__Month__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Month__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getActualEntriesAssignment_7()); }
(rule__Month__ActualEntriesAssignment_7)*
{ after(grammarAccess.getMonthAccess().getActualEntriesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Month__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Month__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Month__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getMonthAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__BudgetEntry__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BudgetEntry__Group_0__0__Impl
	rule__BudgetEntry__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getBudgetAmountEntryAction_0_0()); }
(

)
{ after(grammarAccess.getBudgetEntryAccess().getBudgetAmountEntryAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BudgetEntry__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BudgetEntry__Group_0__1__Impl
	rule__BudgetEntry__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getCategoryAssignment_0_1()); }
(rule__BudgetEntry__CategoryAssignment_0_1)
{ after(grammarAccess.getBudgetEntryAccess().getCategoryAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BudgetEntry__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BudgetEntry__Group_0__2__Impl
	rule__BudgetEntry__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getColonKeyword_0_2()); }

	':' 

{ after(grammarAccess.getBudgetEntryAccess().getColonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BudgetEntry__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BudgetEntry__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getAmountAssignment_0_3()); }
(rule__BudgetEntry__AmountAssignment_0_3)
{ after(grammarAccess.getBudgetEntryAccess().getAmountAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BudgetEntry__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BudgetEntry__Group_1__0__Impl
	rule__BudgetEntry__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getBudgetFactorEntryAction_1_0()); }
(

)
{ after(grammarAccess.getBudgetEntryAccess().getBudgetFactorEntryAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BudgetEntry__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BudgetEntry__Group_1__1__Impl
	rule__BudgetEntry__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getCategoryAssignment_1_1()); }
(rule__BudgetEntry__CategoryAssignment_1_1)
{ after(grammarAccess.getBudgetEntryAccess().getCategoryAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BudgetEntry__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BudgetEntry__Group_1__2__Impl
	rule__BudgetEntry__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getBudgetEntryAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BudgetEntry__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BudgetEntry__Group_1__3__Impl
	rule__BudgetEntry__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getBaseEntryAssignment_1_3()); }
(rule__BudgetEntry__BaseEntryAssignment_1_3)
{ after(grammarAccess.getBudgetEntryAccess().getBaseEntryAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BudgetEntry__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BudgetEntry__Group_1__4__Impl
	rule__BudgetEntry__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getAsteriskKeyword_1_4()); }

	'*' 

{ after(grammarAccess.getBudgetEntryAccess().getAsteriskKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BudgetEntry__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BudgetEntry__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getFactorAssignment_1_5()); }
(rule__BudgetEntry__FactorAssignment_1_5)
{ after(grammarAccess.getBudgetEntryAccess().getFactorAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ActualEntry__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualEntry__Group_0__0__Impl
	rule__ActualEntry__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getActualAmountEntryAction_0_0()); }
(

)
{ after(grammarAccess.getActualEntryAccess().getActualAmountEntryAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualEntry__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualEntry__Group_0__1__Impl
	rule__ActualEntry__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getCategoryAssignment_0_1()); }
(rule__ActualEntry__CategoryAssignment_0_1)
{ after(grammarAccess.getActualEntryAccess().getCategoryAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualEntry__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualEntry__Group_0__2__Impl
	rule__ActualEntry__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getColonKeyword_0_2()); }

	':' 

{ after(grammarAccess.getActualEntryAccess().getColonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualEntry__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualEntry__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getAmountAssignment_0_3()); }
(rule__ActualEntry__AmountAssignment_0_3)
{ after(grammarAccess.getActualEntryAccess().getAmountAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActualEntry__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualEntry__Group_1__0__Impl
	rule__ActualEntry__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getActualTransactionEntryAction_1_0()); }
(

)
{ after(grammarAccess.getActualEntryAccess().getActualTransactionEntryAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualEntry__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualEntry__Group_1__1__Impl
	rule__ActualEntry__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getCategoryAssignment_1_1()); }
(rule__ActualEntry__CategoryAssignment_1_1)
{ after(grammarAccess.getActualEntryAccess().getCategoryAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualEntry__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualEntry__Group_1__2__Impl
	rule__ActualEntry__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getLeftCurlyBracketKeyword_1_2()); }

	'{' 

{ after(grammarAccess.getActualEntryAccess().getLeftCurlyBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualEntry__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualEntry__Group_1__3__Impl
	rule__ActualEntry__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getActualEntryAccess().getTransactionsAssignment_1_3()); }
(rule__ActualEntry__TransactionsAssignment_1_3)
{ after(grammarAccess.getActualEntryAccess().getTransactionsAssignment_1_3()); }
)
(
{ before(grammarAccess.getActualEntryAccess().getTransactionsAssignment_1_3()); }
(rule__ActualEntry__TransactionsAssignment_1_3)*
{ after(grammarAccess.getActualEntryAccess().getTransactionsAssignment_1_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActualEntry__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActualEntry__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getRightCurlyBracketKeyword_1_4()); }

	'}' 

{ after(grammarAccess.getActualEntryAccess().getRightCurlyBracketKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Transaction__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_0__0__Impl
	rule__Transaction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getCashTransactionAction_0_0()); }
(

)
{ after(grammarAccess.getTransactionAccess().getCashTransactionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_0__1__Impl
	rule__Transaction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getCashKeyword_0_1()); }

	'cash' 

{ after(grammarAccess.getTransactionAccess().getCashKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_0__2__Impl
	rule__Transaction__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getAmountAssignment_0_2()); }
(rule__Transaction__AmountAssignment_0_2)
{ after(grammarAccess.getTransactionAccess().getAmountAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getGroup_0_3()); }
(rule__Transaction__Group_0_3__0)?
{ after(grammarAccess.getTransactionAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Transaction__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_0_3__0__Impl
	rule__Transaction__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getOnKeyword_0_3_0()); }

	'on' 

{ after(grammarAccess.getTransactionAccess().getOnKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getDayAssignment_0_3_1()); }
(rule__Transaction__DayAssignment_0_3_1)
{ after(grammarAccess.getTransactionAccess().getDayAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transaction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_1__0__Impl
	rule__Transaction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getCardTransactionAction_1_0()); }
(

)
{ after(grammarAccess.getTransactionAccess().getCardTransactionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_1__1__Impl
	rule__Transaction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getCardKeyword_1_1()); }

	'card' 

{ after(grammarAccess.getTransactionAccess().getCardKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_1__2__Impl
	rule__Transaction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getAmountAssignment_1_2()); }
(rule__Transaction__AmountAssignment_1_2)
{ after(grammarAccess.getTransactionAccess().getAmountAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_1__3__Impl
	rule__Transaction__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getOnKeyword_1_3()); }

	'on' 

{ after(grammarAccess.getTransactionAccess().getOnKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_1__4__Impl
	rule__Transaction__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getDayAssignment_1_4()); }
(rule__Transaction__DayAssignment_1_4)
{ after(grammarAccess.getTransactionAccess().getDayAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_1__5__Impl
	rule__Transaction__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getFromKeyword_1_5()); }

	'from' 

{ after(grammarAccess.getTransactionAccess().getFromKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transaction__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transaction__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getFromAssignment_1_6()); }
(rule__Transaction__FromAssignment_1_6)
{ after(grammarAccess.getTransactionAccess().getFromAssignment_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















rule__Library__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLibraryAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Library__CategoriesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLibraryAccess().getCategoriesCategoryParserRuleCall_3_0()); }
	ruleCategory{ after(grammarAccess.getLibraryAccess().getCategoriesCategoryParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Category__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getCategoryAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Category__NameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getNameIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getCategoryAccess().getNameIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Category__PatternsAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getPatternsSTRINGTerminalRuleCall_1_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getCategoryAccess().getPatternsSTRINGTerminalRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Category__PatternsAssignment_1_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoryAccess().getPatternsSTRINGTerminalRuleCall_1_3_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getCategoryAccess().getPatternsSTRINGTerminalRuleCall_1_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Year__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYearAccess().getNameINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getYearAccess().getNameINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Year__LibraryAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYearAccess().getLibraryLibraryCrossReference_2_0()); }
(
{ before(grammarAccess.getYearAccess().getLibraryLibraryIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getYearAccess().getLibraryLibraryIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getYearAccess().getLibraryLibraryCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Year__MonthsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYearAccess().getMonthsMonthParserRuleCall_4_0()); }
	ruleMonth{ after(grammarAccess.getYearAccess().getMonthsMonthParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Month__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getNameMonthEnumEnumRuleCall_0_0()); }
	ruleMonthEnum{ after(grammarAccess.getMonthAccess().getNameMonthEnumEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Month__BudgetEntriesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getBudgetEntriesBudgetEntryParserRuleCall_3_0()); }
	ruleBudgetEntry{ after(grammarAccess.getMonthAccess().getBudgetEntriesBudgetEntryParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Month__ActualEntriesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthAccess().getActualEntriesActualEntryParserRuleCall_7_0()); }
	ruleActualEntry{ after(grammarAccess.getMonthAccess().getActualEntriesActualEntryParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__CategoryAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getCategoryCategoryCrossReference_0_1_0()); }
(
{ before(grammarAccess.getBudgetEntryAccess().getCategoryCategoryIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getBudgetEntryAccess().getCategoryCategoryIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getBudgetEntryAccess().getCategoryCategoryCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__AmountAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getAmountDollarParserRuleCall_0_3_0()); }
	ruleDollar{ after(grammarAccess.getBudgetEntryAccess().getAmountDollarParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__CategoryAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getCategoryCategoryCrossReference_1_1_0()); }
(
{ before(grammarAccess.getBudgetEntryAccess().getCategoryCategoryIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getBudgetEntryAccess().getCategoryCategoryIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getBudgetEntryAccess().getCategoryCategoryCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__BaseEntryAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getBaseEntryBudgetEntryCrossReference_1_3_0()); }
(
{ before(grammarAccess.getBudgetEntryAccess().getBaseEntryBudgetEntryIDTerminalRuleCall_1_3_0_1()); }
	RULE_ID{ after(grammarAccess.getBudgetEntryAccess().getBaseEntryBudgetEntryIDTerminalRuleCall_1_3_0_1()); }
)
{ after(grammarAccess.getBudgetEntryAccess().getBaseEntryBudgetEntryCrossReference_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BudgetEntry__FactorAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBudgetEntryAccess().getFactorDoubleParserRuleCall_1_5_0()); }
	ruleDouble{ after(grammarAccess.getBudgetEntryAccess().getFactorDoubleParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__CategoryAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getCategoryCategoryCrossReference_0_1_0()); }
(
{ before(grammarAccess.getActualEntryAccess().getCategoryCategoryIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getActualEntryAccess().getCategoryCategoryIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getActualEntryAccess().getCategoryCategoryCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__AmountAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getAmountDollarParserRuleCall_0_3_0()); }
	ruleDollar{ after(grammarAccess.getActualEntryAccess().getAmountDollarParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__CategoryAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getCategoryCategoryCrossReference_1_1_0()); }
(
{ before(grammarAccess.getActualEntryAccess().getCategoryCategoryIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getActualEntryAccess().getCategoryCategoryIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getActualEntryAccess().getCategoryCategoryCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActualEntry__TransactionsAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActualEntryAccess().getTransactionsTransactionParserRuleCall_1_3_0()); }
	ruleTransaction{ after(grammarAccess.getActualEntryAccess().getTransactionsTransactionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__AmountAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getAmountDollarParserRuleCall_0_2_0()); }
	ruleDollar{ after(grammarAccess.getTransactionAccess().getAmountDollarParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__DayAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getDayOptionalIntParserRuleCall_0_3_1_0()); }
	ruleOptionalInt{ after(grammarAccess.getTransactionAccess().getDayOptionalIntParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__AmountAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getAmountDollarParserRuleCall_1_2_0()); }
	ruleDollar{ after(grammarAccess.getTransactionAccess().getAmountDollarParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__DayAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getDayINTTerminalRuleCall_1_4_0()); }
	RULE_INT{ after(grammarAccess.getTransactionAccess().getDayINTTerminalRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transaction__FromAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionAccess().getFromSTRINGTerminalRuleCall_1_6_0()); }
	RULE_STRING{ after(grammarAccess.getTransactionAccess().getFromSTRINGTerminalRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_DECIMAL : RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


